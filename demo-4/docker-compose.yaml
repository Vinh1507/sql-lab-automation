version: '3'

services:
  sql_lab_client:
    image: vinhbh/sql-lab-client:3.5
    container_name: sql_lab_client
    ports:
      - "3000:80"
    env_file:
      - .env.client
    environment:
      - REACT_APP_BASE_BACKEND_URL=https://sql-api.toiyeuptit.com/api/v1 # Thay thế 192.168.144.1 thành IP/domain server chạy back-end

  sql_lab_server_backend:
    container_name: sql_lab_server_backend
    image: vinhbh/sql-lab-server:3.3
    ports:
      - "8001:8000"
    command: npm run prod
    networks:
      - sql_lab_network
    depends_on:
      sql_lab_server_db:
        condition: service_healthy
    env_file:
      - .env.server
    environment:
      DEFAULT_ADMIN_USERNAME: admin
      DEFAULT_ADMIN_PASSWORD: akshfdt_81h7914@jald_ad

  sql_lab_server_db:
    image: mysql:8.0.37
    restart: always
    container_name: sql_lab_server_db
    environment:
      MYSQL_ROOT_PASSWORD: SqlLab2024!
      MYSQL_DATABASE: sql_lab_cms
    ports:
      - "3308:3306"
    networks:
      - sql_lab_network
    volumes:
      - sql_lab_server_db_data_v18:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -hlocalhost -uroot -prootpassword"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  rabbitmq_sql:
    container_name: rabbitmq_sql
    image: "rabbitmq:3.9-management"
    ports:
      - "5673:5672"
    networks:
      - sql_lab_network

  redis_sql:
    image: redis:latest
    container_name: redis_sql
    volumes:
      - redis_data:/data
    networks:
      - sql_lab_network
    command: redis-server --appendonly yes
    restart: unless-stopped

  minio-sql:
    image: minio/minio
    container_name: minio-sql
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: vinhbh
      MINIO_ROOT_PASSWORD: 1234567abc
    volumes:
      - minio_sql_data:/data
      - minio_sql_config:/root/.minio
      # - ./certs:/root/.minio/certs # Nếu muốn sử dụng SSL cho minio
    command: server /data --console-address ":9001"
    networks:
      - sql_lab_network

  sql-judger:
    image: vinhbh/sql-judger:3.14
    container_name: sql-judger
    env_file:
      - .env.judge
    environment:
      - PYTHONUNBUFFERED=1  # Đảm bảo rằng output không bị đệm, hữu ích khi debug
      - SQL_LAB_SERVER_BASE_URL=http://sql_lab_server_backend:8000/api/v1 # Thay thế thành IP/domain server chạy back-end
      - S3_ENDPOINT=minio-sql:9000 # Thay thế localhost thành IP/domain server chạy back-end
      - RABBITMQ_HOST=rabbitmq_sql # Thay thế localhost thành IP/domain server chạy back-end
      - RABBITMQ_PORT=5672
    networks:
      -  sql_lab_network
  mysql_judge_db:
    image: mysql:8.0
    restart: always
    container_name: mysql_judge_db
    ports:
      - 3309:3306
    environment:
      - MYSQL_ROOT_PASSWORD=SqlLab2024!
      - MYSQL_DATABASE=base_issue_data
    volumes:
      - ./docker-data/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_db_data_v20:/var/lib/mysql
    networks:
      -  sql_lab_network

  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=SqlLab2024@CNTT1
      - MSSQL_PID=Developer
    user: root
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data_v20:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P SqlLab2024@CNTT1 -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    networks:
      -  sql_lab_network

  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    volumes:
      - ./docker-data/mssql_server-init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P SqlLab2024@CNTT1 -C -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '
    networks:
      -  sql_lab_network

  redis:
    image: redis:latest
    container_name: redis_judger
    volumes:
      - redis_data_judge:/data
    networks:
      -  sql_lab_network
volumes:
  sql_lab_server_db_data_v18:
  redis_data:
  minio_sql_data:
  minio_sql_config:
  redis_data_judge:
  mysql_db_data_v20:
  sqlserver_data_v20:

networks:
  sql_lab_network:
    driver: bridge